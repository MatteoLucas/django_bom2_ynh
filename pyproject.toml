[project]
name = "django_bom_ynh"
dynamic = ["version"]
description = "YunoHost package for Django-Bom, a Bill of Materials management system."
license = {text = "GPL-3.0-or-later"}
readme = "README.md"
authors = [
    {name = 'Matteo Lucas', email = 'matteo.lucas04@gmail.com'}
]
requires-python = ">=3.11"
dependencies = [
    "django",  
    "gunicorn",  
    "psycopg2",  # PostgreSQL support
    "django-bom @ git+https://github.com/mpkasp/django-bom.git"
]

[project.optional-dependencies]
dev = [
    "beautifulsoup4",
    "pip-tools",
    "tox",
    "coverage",
    "flake8",
    "isort",
    "black",
    "mypy",
    "twine"
]

[tool.pip-tools.compile]
index-url="https://pypi.org/simple"
extra-index-url=["https://www.piwheels.org/simple"]  
generate-hashes = true
allow-unsafe = true
resolver="backtracking"
strip-extras = true

[project.urls]
Documentation = "https://github.com/mpkasp/django-bom"
Source = "https://github.com/TON_GITHUB_USERNAME/django-bom_ynh"

[project.scripts]
django_bom_ynh_app = "django_bom_ynh.__main__:main"

[ynh-integration]
local_settings_source= "local_settings_source.py"

[build-system]
requires = ["setuptools>=61.0", "setuptools_scm>=7.1"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]

[tool.setuptools.dynamic]
version = {attr = "django_bom_ynh.__version__"}

[tool.darker]
src = ['.']
revision = "origin/master..."
line_length = 119
color = true
skip_string_normalization = true
diff = false
check = false
stdout = false
isort = true
lint = [
    "flake8",
]
log_level = "INFO"

[tool.isort]
atomic=true
profile='black'
skip_glob=[".*", "*/htmlcov/*","*/migrations/*"]
known_first_party=['django_bom']
line_length=119
lines_after_imports=2

[tool.coverage.run]
branch = true
parallel = true
concurrency = ["multiprocessing"]
source = ['.']
command_line = './dev-cli.py test'
disable_warnings = ["couldnt-parse"]

[tool.coverage.report]
omit = ['.*', '*/tests/*']
skip_empty = true
fail_under = 10
show_missing = true
exclude_lines = [
    'if self.debug:',
    'pragma: no cover',
    'raise NotImplementedError',
    'if __name__ == .__main__.:',
]

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py{313,312,311}
skip_missing_interpreters = True

[testenv]
passenv = *
skip_install = true
commands_pre =
    pip install -U pip-tools
    pip-sync requirements.dev.txt
commands =
    {envpython} -m coverage run --context='{envname}'
    {envpython} -m coverage combine --append
    {envpython} -m coverage xml
    {envpython} -m coverage report
"""

[tool.mypy]
warn_unused_configs = true
ignore_missing_imports = true
allow_redefinition = true
show_error_codes = true
exclude = ['.venv', 'tests']